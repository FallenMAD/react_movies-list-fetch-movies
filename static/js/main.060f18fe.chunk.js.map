{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","api.ts","components/FindMovie/FindMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","getMovie","query","delay","Promise","resolve","setTimeout","then","fetch","res","json","catch","Response","Error","FindMovie","handleMovieAdd","useState","setQuery","setMovie","isLoadingMovie","setIsLoadingMovie","hasLoadingError","setHasLoadingError","getNewMovie","Poster","Title","Plot","imdbID","newMovie","loadMovie","a","finally","movieData","htmlFor","type","id","placeholder","value","onChange","e","target","classNames","onClick","preventDefault","disabled","App","setMovies","find","item","prev","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.060f18fe.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movieCard\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          data-cy=\"moviePoster\"\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\" data-cy=\"movieTitle\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\" data-cy=\"movieDescription\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl} data-cy=\"movieURL\">\n          IMDB\n        </a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import { MovieData } from './types/MovieData';\nimport { ResponseError } from './types/ReponseError';\n\nconst API_URL = 'https://www.omdbapi.com/?apikey=6e933e75';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nexport function getMovie(query: string): Promise<MovieData | ResponseError> {\n  return wait(500)\n    .then(() => fetch(`${API_URL}&t=${query}`))\n    .then(res => res.json())\n    .catch(() => ({\n      Response: 'False',\n      Error: 'unexpected error',\n    }));\n}\n","import React, { useState } from 'react';\nimport './FindMovie.scss';\nimport classNames from 'classnames';\nimport { getMovie } from '../../api';\nimport { Movie } from '../../types/Movie';\nimport { MovieData } from '../../types/MovieData';\nimport { MovieCard } from '../MovieCard';\n\ntype Props = {\n  handleMovieAdd: (movie: Movie) => void,\n};\n\nexport const FindMovie: React.FC<Props> = ({ handleMovieAdd }) => {\n  const [query, setQuery] = useState('');\n  const [movie, setMovie] = useState<Movie | null>(null);\n  const [isLoadingMovie, setIsLoadingMovie] = useState(false);\n  const [hasLoadingError, setHasLoadingError] = useState(false);\n\n  const getNewMovie = ({\n    Poster,\n    Title,\n    Plot,\n    imdbID,\n  }: MovieData) => {\n    const newMovie = {\n      title: Title,\n      description: Plot,\n      imdbUrl: `https://www.imdb.com/title/${imdbID}`,\n      imdbId: imdbID,\n      imgUrl: Poster === 'N/A'\n        ? 'https://via.placeholder.com/360x270.png?text=no%20preview'\n        : Poster,\n    };\n\n    setMovie(newMovie);\n  };\n\n  const loadMovie = async () => {\n    setIsLoadingMovie(true);\n    setHasLoadingError(false);\n    try {\n      const movieData = await getMovie(query)\n        .finally(() => setIsLoadingMovie(false));\n\n      if ('Error' in movieData) {\n        throw new Error('Error');\n      } else {\n        getNewMovie(movieData as MovieData);\n      }\n    } catch (error) {\n      setHasLoadingError(true);\n    }\n  };\n\n  const handleFindMovie = (\n    e: React.MouseEvent<HTMLButtonElement, MouseEvent>,\n  ) => {\n    e.preventDefault();\n    loadMovie();\n    setIsLoadingMovie(true);\n  };\n\n  const handleAddFilm = (film: Movie) => {\n    handleMovieAdd(film);\n    setQuery('');\n    setMovie(null);\n    setIsLoadingMovie(false);\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\">\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              data-cy=\"titleField\"\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className=\"input is-dander\"\n              value={query}\n              onChange={(e) => {\n                setQuery(e.target.value);\n                setHasLoadingError(false);\n              }}\n            />\n          </div>\n\n          { hasLoadingError && (\n            <p className=\"help is-danger\" data-cy=\"errorMessage\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              data-cy=\"searchButton\"\n              type=\"submit\"\n              className={classNames('button is-light',\n                { 'is-loading': isLoadingMovie })}\n              onClick={handleFindMovie}\n              disabled={!query}\n            >\n              { movie ? 'Search Movie' : 'Find a movie' }\n            </button>\n          </div>\n\n          <div className=\"control\">\n            { movie && (\n              <button\n                data-cy=\"addButton\"\n                type=\"button\"\n                className=\"button is-primary\"\n                onClick={() => handleAddFilm(movie)}\n              >\n                Add to the list\n              </button>\n            )}\n          </div>\n        </div>\n      </form>\n\n      { movie && (\n        <div className=\"container\" data-cy=\"previewContainer\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard movie={movie} />\n        </div>\n      )}\n    </>\n  );\n};\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  const onAddMovie = (movie: Movie) => {\n    const hasMovie = movies.find(item => item.imdbId === movie.imdbId);\n\n    if (!hasMovie) {\n      setMovies((prev) => {\n        return [...prev, movie];\n      });\n    }\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie handleMovieAdd={onAddMovie} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}